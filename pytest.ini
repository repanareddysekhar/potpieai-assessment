[tool:pytest]
# Pytest configuration file
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=app
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --tb=short
    --durations=10
    -v

testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (medium speed, multiple components)
    e2e: End-to-end tests (slow, full system)
    performance: Performance tests (slow, benchmarking)
    cache: Cache-related tests
    api: API endpoint tests
    github: GitHub service tests
    redis: Redis-dependent tests
    slow: Slow running tests
    fast: Fast running tests
    smoke: Smoke tests for basic functionality
    regression: Regression tests
    security: Security-related tests

# Asyncio configuration
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Filtering
filterwarnings =
    ignore::DeprecationWarning:pydantic.*
    ignore::DeprecationWarning:github.*
    ignore::UserWarning:structlog.*

# Coverage configuration
[coverage:run]
source = app
omit = 
    */tests/*
    */venv/*
    */__pycache__/*
    */migrations/*
    */conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
